{"version":3,"sources":["webpack:///./src/pages/cases.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Cases","props","state","render","query","data","console","log","allMarkdownRemark","totalCount","edges","map","node","key","id","to","fields","slug","frontmatter","title","excerpt","React","Component","m","module","exports","require","default","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","StaticQuery","children","Consumer","Layout","className","src","alt","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"4LAIqBA,E,oBACjB,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,GAFE,E,0GAKnBC,OAAA,WACI,OAAO,kBAAC,IAAD,CACHC,MAAK,aAmBLD,OAAQ,SAAAE,GAEJ,OADAC,QAAQC,IAAIF,GACL,kBAAC,IAAD,KACH,0CACA,4BAAKA,EAAKG,kBAAkBC,WAA5B,UACCJ,EAAKG,kBAAkBE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC9B,yBAAKC,IAAKD,EAAKE,IACX,kBAAC,IAAD,CAAMC,GAAIH,EAAKI,OAAOC,MAClB,4BACKL,EAAKM,YAAYC,MAAO,IACzB,iCAKR,2BAAIP,EAAKQ,eAnCtB,U,GAPoBC,IAAMC,Y,oBCJzC,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,iCCA/C,uHAcyBK,QAAOC,QAdhC,IAgBMC,EAAqBT,IAAMU,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiB5B,EAAuB,EAAvBA,KAAMD,EAAiB,EAAjBA,MAAOD,EAAU,EAAVA,OACzD+B,EAAY7B,EACdA,EAAKA,KACL4B,EAAgB7B,IAAU6B,EAAgB7B,GAAOC,KAErD,OACE,kBAAC,IAAM8B,SAAP,KACGD,GAAa/B,EAAO+B,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAAnC,GAAU,IACpBI,EAAkCJ,EAAlCI,KAAMD,EAA4BH,EAA5BG,MAAOD,EAAqBF,EAArBE,OAAQkC,EAAapC,EAAboC,SAE7B,OACE,kBAACP,EAAmBQ,SAApB,MACG,SAAAL,GAAe,OACd,kBAACD,EAAD,CACE3B,KAAMA,EACND,MAAOA,EACPD,OAAQA,GAAUkC,EAClBJ,gBAAiBA,S,6GCtCNM,E,oBACjB,WAAYtC,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,GAFE,E,0GAKnBC,OAAA,WAAU,IAAD,OACL,OAAO,kBAAC,IAAD,CACHC,MAAK,YASLD,OACI,SAAAE,GAAI,OAAI,yBAAKmC,UAAU,aAEnB,yBAAKA,UAAU,qCAEX,wBAAIA,UAAU,cACV,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMA,UAAU,WAAWzB,GAAG,KAA9B,oBAEJ,wBAAIyB,UAAU,eACV,kBAAC,IAAD,CAAMA,UAAU,WAAWzB,GAAG,WAA9B,UAEJ,wBAAIyB,UAAU,eACV,kBAAC,IAAD,CAAMA,UAAU,WAAWzB,GAAG,KAA9B,gBAEJ,wBAAIyB,UAAU,eACV,kBAAC,IAAD,CAAMA,UAAU,WAAWzB,GAAG,KAA9B,aAIR,kBAAC,IAAD,CAAMyB,UAAU,wBAAwBzB,GAAG,KACxC,yBAAKyB,UAAU,WAAWC,IAAI,YAAYC,IAAI,WAMrD,yBAAKF,UAAU,WACV,EAAKvC,MAAMoC,YAtCrB,U,GAPqBhB,IAAMC,Y,0KCmB3BqB,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGExB,IAAMyB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O","file":"component---src-pages-cases-js-2e591a145fe9a50d52ec.js","sourcesContent":["import React from 'react'\r\nimport { StaticQuery, graphql, Link } from 'gatsby'\r\nimport Layout from '../components/Layout'\r\n\r\nexport default class Cases extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return <StaticQuery\r\n            query={graphql`\r\n        query GetAllCases {\r\n            allMarkdownRemark {\r\n                totalCount\r\n                edges {\r\n                    node {\r\n                        fields {\r\n                            slug\r\n                        }\r\n                        id\r\n                        frontmatter {\r\n                            title\r\n                            }\r\n                            excerpt\r\n                        }\r\n                    }\r\n                }\r\n            \r\n        }`}\r\n            render={data => {\r\n                console.log(data)\r\n                return <Layout>\r\n                    <h1>Onze Cases</h1>\r\n                    <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\r\n                    {data.allMarkdownRemark.edges.map(({ node }) => (\r\n                        <div key={node.id}>\r\n                            <Link to={node.fields.slug}>\r\n                                <h3>\r\n                                    {node.frontmatter.title}{\" \"}\r\n                                    <span>\r\n                                        {/* â€” {node.frontmatter.date} */}\r\n                                    </span>\r\n                                </h3>\r\n                            </Link>\r\n                            <p>{node.excerpt}</p>\r\n                        </div>\r\n                    ))}\r\n                </Layout>\r\n            }}\r\n        />\r\n    }\r\n}","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react'\r\nimport { StaticQuery, graphql, Link } from 'gatsby'\r\n\r\nexport default class Layout extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return <StaticQuery\r\n            query={graphql`\r\n        query SiteTitleQuery {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                }\r\n            }\r\n        }\r\n        `}\r\n            render={\r\n                data => <div className='container'>\r\n\r\n                    <nav className='navbar navbar-expand-sm my-navbar'>\r\n\r\n                        <ul className='navbar-nav'>\r\n                            <li className='navbar-item'>\r\n                                <Link className='nav-link' to='/'>Leer ons kennen</Link>\r\n                            </li>\r\n                            <li className='navbar-item'>\r\n                                <Link className='nav-link' to='/cases/'>Cases</Link>\r\n                            </li>\r\n                            <li className='navbar-item'>\r\n                                <Link className='nav-link' to='/'>Onze mensen</Link>\r\n                            </li>\r\n                            <li className='navbar-item'>\r\n                                <Link className='nav-link' to='/'>Contact</Link>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <Link className='navbar-brand my-brand' to='/'>\r\n                           <img className='img-logo' src='/logo.jpg' alt='logo'/>\r\n                        </Link>\r\n\r\n                    </nav>\r\n\r\n\r\n                    <div className='content'>\r\n                        {this.props.children}\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n        />\r\n    }\r\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/templates/Case.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Case","props","state","render","post","this","data","markdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html","React","Component","query","m","module","exports","require","default","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","StaticQuery","children","Consumer","Layout","className","to","site","siteMetadata","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"gNAIqBA,E,oBACjB,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,GAFE,E,0GAKnBC,OAAA,WACI,IAAMC,EAAOC,KAAKJ,MAAMK,KAAKC,eAC7B,OAAO,kBAAC,IAAD,KACP,6BACI,4BAAKH,EAAKI,YAAYC,OACtB,yBAAKC,wBAAyB,CAAEC,OAAQP,EAAKQ,W,GAXvBC,IAAMC,WAiB3BC,EAAK,a,oBCrBlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,iCCA/C,uHAcyBK,QAAOC,QAdhC,IAgBMC,EAAqBV,IAAMW,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiBpB,EAAuB,EAAvBA,KAAMS,EAAiB,EAAjBA,MAAOZ,EAAU,EAAVA,OACzDwB,EAAYrB,EACdA,EAAKA,KACLoB,EAAgBX,IAAUW,EAAgBX,GAAOT,KAErD,OACE,kBAAC,IAAMsB,SAAP,KACGD,GAAaxB,EAAOwB,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAA5B,GAAU,IACpBK,EAAkCL,EAAlCK,KAAMS,EAA4Bd,EAA5Bc,MAAOZ,EAAqBF,EAArBE,OAAQ2B,EAAa7B,EAAb6B,SAE7B,OACE,kBAACP,EAAmBQ,SAApB,MACG,SAAAL,GAAe,OACd,kBAACD,EAAD,CACEnB,KAAMA,EACNS,MAAOA,EACPZ,OAAQA,GAAU2B,EAClBJ,gBAAiBA,S,6GCtCNM,E,oBACjB,WAAY/B,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,GAFE,E,0GAKnBC,OAAA,WAAU,IAAD,OACL,OAAO,kBAAC,IAAD,CACHY,MAAK,YASLZ,OAAQ,SAAAG,GAAI,OAAI,yBAAK2B,UAAU,aAC3B,wBAAIA,UAAU,cACV,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,oBACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,KAAT,gBACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,KAAT,aAER,kBAAC,IAAD,CAAMA,GAAG,KACL,wBAAID,UAAU,UAAU3B,EAAK6B,KAAKC,aAAa3B,QAGnD,yBAAKwB,UAAU,WACV,EAAKhC,MAAM6B,YAtBjB,U,GAPqBjB,IAAMC,Y,0KCmB3BuB,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGE1B,IAAM2B,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-templates-case-js-21e990e13dd08a16cf03.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/Layout'\r\n\r\nexport default class Case extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        const post = this.props.data.markdownRemark\r\n        return <Layout>\r\n        <div>\r\n            <h1>{post.frontmatter.title}</h1>\r\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        </div>\r\n    </Layout>\r\n    }\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react'\r\nimport { StaticQuery, graphql, Link } from 'gatsby'\r\n\r\nexport default class Layout extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return <StaticQuery\r\n            query={graphql`\r\n        query SiteTitleQuery {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                }\r\n            }\r\n        }\r\n        `}\r\n            render={data => <div className='container'>\r\n                <ul className='sample-nav'>\r\n                    <li><Link to='/'>Leer ons kennen</Link></li>\r\n                    <li><Link to='/cases/'>Cases</Link></li>\r\n                    <li><Link to='/'>Onze mensen</Link></li>\r\n                    <li><Link to='/'>Contact</Link></li>\r\n                </ul>\r\n                <Link to='/'>\r\n                    <h1 className='header'>{data.site.siteMetadata.title}</h1>\r\n                </Link>\r\n\r\n                <div className='content'>\r\n                    {this.props.children}\r\n                </div>\r\n\r\n            </div>}\r\n        />\r\n    }\r\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}